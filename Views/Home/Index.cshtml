@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@using MultiLanguge.Controllers
@{
    ViewData["Title"] = "Home Page";
    var rqf = Context.Request.HttpContext.Features.Get<IRequestCultureFeature>();
    // Culture contains the information of the requested culture
    var culture = rqf.RequestCulture.Culture;

}
@inject IStringLocalizer<HomeController> localizer;
@inject IViewLocalizer Viewlocalizer;
@inject IOptions<RequestLocalizationOptions> LocOptions;


@if (culture.ToString() == "fa-IR")
{
    <style>
        body {
            direction: rtl;
        }
    </style>
}

<h1>
    @localizer["Title"]
    @localizer["Tag"]

</h1>

<h1>
    @Viewlocalizer["Name"]

</h1>

<h1>
    @culture

</h1>

@{
    string returnUrl = ViewContext.HttpContext.Request.Path;
    var requestCultures = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocOptions.Value.SupportedUICultures.
    Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
    .ToList();

}

<fieldset>
    <legend>
        Change Languge
    </legend>

    <form asp-action="ChangeLanguge" asp-controller="Home" method="post">
        <input type="hidden" name="returnUrl" value="@returnUrl" />
        <select id="culture"
                name="culture"
                class="form-control"
                asp-items="cultureItems"
                asp-for="@requestCultures.RequestCulture.UICulture.Name"
                onchange="this.form.submit();">
        </select>
    </form>
</fieldset>